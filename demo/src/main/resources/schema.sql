DROP TABLE IF EXISTS usage_predictions;
DROP TABLE IF EXISTS software_assets;
DROP TABLE IF EXISTS yield_records;
DROP TABLE IF EXISTS crops;
DROP TABLE IF EXISTS regions;
DROP TABLE IF EXISTS categories;
DROP TABLE IF EXISTS sys_role_permission;
DROP TABLE IF EXISTS sys_user_role;
DROP TABLE IF EXISTS sys_refresh_token;
DROP TABLE IF EXISTS sys_login_log;
DROP TABLE IF EXISTS sys_user;
DROP TABLE IF EXISTS sys_role;
DROP TABLE IF EXISTS sys_permission;
DROP TABLE IF EXISTS forecast_run_series;
DROP TABLE IF EXISTS forecast_run;

CREATE TABLE categories (
                             id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                             name VARCHAR(128) NOT NULL UNIQUE,
                             description VARCHAR(512)
);

CREATE TABLE regions (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          name VARCHAR(255) NOT NULL UNIQUE,
                          level VARCHAR(50) NOT NULL,
                          parent_name VARCHAR(255),
                          description VARCHAR(1000)
);

CREATE TABLE crops (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        name VARCHAR(255) NOT NULL UNIQUE,
                        category VARCHAR(128) NOT NULL,
                        description VARCHAR(1000)
);

CREATE TABLE yield_records (
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               crop_id BIGINT NOT NULL,
                               region_id BIGINT NOT NULL,
                               harvest_year INT NOT NULL,
                               sown_area DOUBLE PRECISION,
                               production DOUBLE PRECISION NOT NULL,
                               yield_per_hectare DOUBLE PRECISION,
                               average_price DOUBLE PRECISION,
                               data_source VARCHAR(255),
                               collected_at DATE,
                               CONSTRAINT fk_yield_crop FOREIGN KEY (crop_id) REFERENCES crops (id) ON DELETE CASCADE,
                               CONSTRAINT fk_yield_region FOREIGN KEY (region_id) REFERENCES regions (id) ON DELETE CASCADE
);

CREATE TABLE software_assets (
                                 id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 name VARCHAR(150) NOT NULL,
                                 version VARCHAR(50),
                                 vendor VARCHAR(120),
                                 license_type VARCHAR(60),
                                 annual_cost DECIMAL(12, 2),
                                 purchase_date DATE,
                                 maintenance_expiry_date DATE,
                                 seats INT,
                                 status VARCHAR(32),
                                 category_id BIGINT,
                                 CONSTRAINT fk_asset_category FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE SET NULL
);

CREATE TABLE usage_predictions (
                                   id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   software_id BIGINT NOT NULL,
                                   prediction_date DATE NOT NULL,
                                   predicted_annual_cost DECIMAL(12, 2),
                                   predicted_active_users INT,
                                   confidence DECIMAL(4, 2),
                                   notes VARCHAR(500),
                                   CONSTRAINT fk_prediction_software FOREIGN KEY (software_id) REFERENCES software_assets (id) ON DELETE CASCADE
);

CREATE TABLE sys_permission (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                code VARCHAR(64) NOT NULL UNIQUE,
                                name VARCHAR(128) NOT NULL,
                                created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_role (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          code VARCHAR(64) NOT NULL UNIQUE,
                          name VARCHAR(128) NOT NULL,
                          created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_user (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          username VARCHAR(64) NOT NULL UNIQUE,
                          password VARCHAR(128) NOT NULL,
                          full_name VARCHAR(128),
                          email VARCHAR(128),
                          created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_login_log (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              username VARCHAR(64) NOT NULL,
                              success BOOLEAN NOT NULL,
                              ip_address VARCHAR(64),
                              user_agent VARCHAR(256),
                              message VARCHAR(256),
                              created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                              updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_refresh_token (
                                  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  token VARCHAR(128) NOT NULL UNIQUE,
                                  expires_at TIMESTAMP NOT NULL,
                                  user_id BIGINT NOT NULL,
                                  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                  CONSTRAINT fk_refresh_user FOREIGN KEY (user_id) REFERENCES sys_user (id) ON DELETE CASCADE
);

CREATE TABLE sys_user_role (
                               user_id BIGINT NOT NULL,
                               role_id BIGINT NOT NULL,
                               PRIMARY KEY (user_id, role_id),
                               CONSTRAINT fk_user_role_user FOREIGN KEY (user_id) REFERENCES sys_user (id) ON DELETE CASCADE,
                               CONSTRAINT fk_user_role_role FOREIGN KEY (role_id) REFERENCES sys_role (id) ON DELETE CASCADE
);

CREATE TABLE sys_role_permission (
                                     role_id BIGINT NOT NULL,
                                     permission_id BIGINT NOT NULL,
                                     PRIMARY KEY (role_id, permission_id),
                                     CONSTRAINT fk_role_perm_role FOREIGN KEY (role_id) REFERENCES sys_role (id) ON DELETE CASCADE,
                                     CONSTRAINT fk_role_perm_permission FOREIGN KEY (permission_id) REFERENCES sys_permission (id) ON DELETE CASCADE
);

CREATE TABLE forecast_run (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              model_id BIGINT NOT NULL,
                              crop_id BIGINT NOT NULL,
                              region_id BIGINT NOT NULL,
                              status VARCHAR(32) NOT NULL,
                              forecast_periods INT NOT NULL,
                              history_years INT,
                              frequency VARCHAR(32),
                              external_request_id VARCHAR(64),
                              error_message VARCHAR(512),
                              mae DOUBLE PRECISION,
                              rmse DOUBLE PRECISION,
                              mape DOUBLE PRECISION,
                              r2 DOUBLE PRECISION,
                              created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                              updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE forecast_run_series (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     run_id BIGINT NOT NULL,
                                     period VARCHAR(32) NOT NULL,
                                     metric_value DOUBLE PRECISION NOT NULL,      -- 原 value 改名
                                     lower_bound DOUBLE PRECISION,
                                     upper_bound DOUBLE PRECISION,
                                     historical BOOLEAN NOT NULL,                 -- 原 BIT -> BOOLEAN
                                     created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                     updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                     CONSTRAINT fk_run_series_run FOREIGN KEY (run_id) REFERENCES forecast_run (id) ON DELETE CASCADE
);

-- 可选：为外键列建索引，提升查询性能
CREATE INDEX idx_run_series_run ON forecast_run_series(run_id);
