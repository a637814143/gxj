-- Drop dependents first due to FKs
DROP TABLE IF EXISTS sys_role_permission;
DROP TABLE IF EXISTS sys_user_role;
DROP TABLE IF EXISTS sys_user;
DROP TABLE IF EXISTS sys_role;
DROP TABLE IF EXISTS sys_permission;
DROP TABLE IF EXISTS forecast_run_series;
DROP TABLE IF EXISTS forecast_run;

CREATE TABLE sys_permission (
                                id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                code VARCHAR(64) NOT NULL UNIQUE,
                                name VARCHAR(128) NOT NULL,
                                created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_role (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          code VARCHAR(64) NOT NULL UNIQUE,
                          name VARCHAR(128) NOT NULL,
                          created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_user (
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          username VARCHAR(64) NOT NULL UNIQUE,
                          password VARCHAR(128) NOT NULL,
                          full_name VARCHAR(128),
                          email VARCHAR(128),
                          created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE sys_user_role (
                               user_id BIGINT NOT NULL,
                               role_id BIGINT NOT NULL,
                               PRIMARY KEY (user_id, role_id),
                               CONSTRAINT fk_user_role_user FOREIGN KEY (user_id) REFERENCES sys_user (id) ON DELETE CASCADE,
                               CONSTRAINT fk_user_role_role FOREIGN KEY (role_id) REFERENCES sys_role (id) ON DELETE CASCADE
);

CREATE TABLE sys_role_permission (
                                     role_id BIGINT NOT NULL,
                                     permission_id BIGINT NOT NULL,
                                     PRIMARY KEY (role_id, permission_id),
                                     CONSTRAINT fk_role_perm_role FOREIGN KEY (role_id) REFERENCES sys_role (id) ON DELETE CASCADE,
                                     CONSTRAINT fk_role_perm_permission FOREIGN KEY (permission_id) REFERENCES sys_permission (id) ON DELETE CASCADE
);

CREATE TABLE forecast_run (
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                              model_id BIGINT NOT NULL,
                              crop_id BIGINT NOT NULL,
                              region_id BIGINT NOT NULL,
                              status VARCHAR(32) NOT NULL,
                              forecast_periods INT NOT NULL,
                              history_years INT,
                              frequency VARCHAR(32),
                              external_request_id VARCHAR(64),
                              error_message VARCHAR(512),
                              mae DOUBLE PRECISION,
                              rmse DOUBLE PRECISION,
                              mape DOUBLE PRECISION,
                              r2 DOUBLE PRECISION,
                              created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                              updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE forecast_run_series (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     run_id BIGINT NOT NULL,
                                     period VARCHAR(32) NOT NULL,
                                     metric_value DOUBLE PRECISION NOT NULL,      -- 原 value 改名
                                     lower_bound DOUBLE PRECISION,
                                     upper_bound DOUBLE PRECISION,
                                     historical BOOLEAN NOT NULL,                 -- 原 BIT -> BOOLEAN
                                     created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                     updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                     CONSTRAINT fk_run_series_run FOREIGN KEY (run_id) REFERENCES forecast_run (id) ON DELETE CASCADE
);

-- 可选：为外键列建索引，提升查询性能
CREATE INDEX idx_run_series_run ON forecast_run_series(run_id);
